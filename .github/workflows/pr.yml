name: PR website
on:
  pull_request

jobs:
  build:
    name: build and deploy
    runs-on: ubuntu-18.04
    env:
      domain_name: ${{ format('pr-{0}.dev.khaledez.net', github.event.pull_request.number) }}
    steps:
        - uses: actions/checkout@v1
          with:
            fetch-depth: 1
        - name: setup node
          uses: actions/setup-node@v1
          with:
            node-version: 12.x
        - name: 'Terraform Format'
          uses: hashicorp/terraform-github-actions@master
          with:
            tf_actions_version: 0.12.13
            tf_actions_subcommand: 'fmt'
            tf_actions_working_dir: 'terraform/'
            tf_actions_comment: true
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        - name: 'Terraform Init'
          uses: hashicorp/terraform-github-actions@master
          with:
            tf_actions_version: 0.12.13
            tf_actions_subcommand: 'init'
            tf_actions_working_dir: 'terraform/'
            tf_actions_comment: true
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        - name: 'Terraform Validate'
          uses: hashicorp/terraform-github-actions@master
          with:
            tf_actions_version: 0.12.13
            tf_actions_subcommand: 'validate'
            tf_actions_working_dir: 'terraform/'
            tf_actions_comment: true
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
        - name: yarn install, test
          run: |
            yarn install
            yarn test
            yarn build --if-present
          env:
            CI: true

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: eu-west-2 # London

        - name: Fetch Terraform state
          uses: actions/download-artifact@v1
          continue-on-error: true
          with:
            name: ${{ format('pr-tfstate-{0}', github.event.pull_request.number) }}
            path: terraform/terraform.tfstate

        - name: Terraform Apply
          id: 'terraform_apply'
          uses: hashicorp/terraform-github-actions@master
          with:
            tf_actions_version: 0.12.13
            tf_actions_subcommand: 'apply'
            tf_actions_working_dir: 'terraform/'
            tf_actions_comment: true
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            TF_VAR_bucket_name: ${{ env.domain_name }}
        - name: Persist Terraform state
          uses: actions/upload-artifact@v1
          with:
            name: ${{ format('pr-tfstate-{0}', github.event.pull_request.number) }}
            path: terraform/terraform.tfstate

        - name: Copy files to S3 with AWS CLI
          run: |
            aws s3 sync public/ s3://${{ env.domain_name }} --acl public-read
            aws s3 website s3://${{ env.domain_name }} --index-document index.html --error-document index.html
