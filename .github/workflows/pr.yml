name: PR website
on:
  - pull_request

jobs:
  build:
    name: build and deploy
    runs-on: ubuntu-18.04
    env:
      domain_name: ${{ format('pr-{0}.dev.khaledez.net', github.event.pull_request.number) }}
      cert_domain: "*.dev.khaledez.net"
      terraform_dir: "terraform/static-website"
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.12.26

      - name: Terraform Format
        run: terraform fmt -check ${{ env.terraform_dir }}

      - name: setup node
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: yarn install, test
        run: |
          yarn install --frozen-lockfile
          yarn test
          yarn build
        env:
          CI: true

      - name: create router lambda zipfile
        run: |
          pushd ${{ env.terraform_dir }}
          mkdir -p target
          zip target/router.zip router.js
          popd

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2 # London

      - name: Terraform Init
        run: terraform init -backend-config="key=pr/${{ env.domain_name }}" ${{ env.terraform_dir }}
      - name: Terraform Validate
        run: terraform validate ${{ env.terraform_dir }}

      - name: Terraform Apply
        run: terraform apply -auto-approve ${{ env.terraform_dir }}
        env:
          TF_VAR_domain_name: ${{ env.domain_name }}
          TF_VAR_cert_domain: ${{ env.cert_domain }}

      - name: Copy files to S3 with AWS CLI
        run: |
          aws s3 sync public/ s3://${{ env.domain_name }}
