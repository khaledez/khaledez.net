#!/bin/sh

# load config

## Default config
backend_s3=net.khaledez.terraform.backend
env_name=local
domain_name=local.dev.khaledez.net

# shellcheck source=/dev/null
. ./please.env

# common functions

log() {
    printf '\033[32m->\033[m %s\n' "$*"
}

die() {
    printf '\033[31m->\033[m %s\n' "$*" >&2
    exit 1
}

# sub commands
{
    tf_website_dir="terraform/static-website"
    command_init() {
        oldpath=$(pwd)
        cd $tf_website_dir || exit 1
        terraform init \
            -backend-config="key=$env_name/$domain_name" \
            -migrate-state \
            -input=false
        cd "$oldpath" || exit 1
    }

    command_sync() {
        oldpath=$(pwd)
        cd $tf_website_dir || exit 1

        terraform apply \
            -auto-approve \
            -var "domain_name=$domain_name" \
            -var "environment=$env_name"

        cd "$oldpath" || exit 1
    }

    command_destroy() {
        oldpath=$(pwd)
        cd $tf_website_dir || exit 1

        terraform destroy \
            -auto-approve \
            -var "domain_name=$domain_name" \
            -var "environment=$env_name" 

        cd "$oldpath" || exit 1

        aws s3 rm "s3://$backend_s3/$env_name/$domain_name"
    }

    command_deploy() {
        aws s3 rm "s3://$domain_name" --recursive
        aws s3 sync dist/ "s3://$domain_name" 
    }

    command_build() {
        exec npm run build
    }

    command_clean() {
        rm -rf dist/
    }
}

[ "$1" ] || die "Usage: ./please [init|sync|destroy|deploy|build|clean]"
"command_$1"
